# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="robbyrussell"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

# User configuration

export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"
# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='emacs'
else
  export EDITOR='emacs -nw'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


# fasd_cd + outputs directory

fasd_cd() {
if [ $# -le 1 ]; then
fasd "$@"
else
local _fasd_ret="$(fasd -e 'printf %s' "$@")"
[ -z "$_fasd_ret" ] && return
[ -d "$_fasd_ret" ] && print "$_fasd_ret" && cd "$_fasd_ret" || printf %s\n "$_fasd_ret"
fi
}
if type fasd &>/dev/null
then
#eval "$(fasd --init auto)"
eval "$(fasd --init zsh-hook zsh-ccomp zsh-ccomp-install zsh-wcomp zsh-wcomp-install)"
# as an autojump user, i need only this for now
alias j=' fasd_cd -d'
fi


alias a='fasd -a' # any
alias s='fasd -si' # show / search / select
alias d='fasd -d' # directory
alias f='fasd -f' # file
alias sd='fasd -sid' # interactive directory selection
alias sf='fasd -sif' # interactive file selection
alias z='fasd_cd -d' # cd, same functionality as j in autojump
alias zz='fasd_cd -d -i' # cd with interactive selection

alias ff='feh -FZ --force-aliasing'

XMODIFIERS=emacs
alias emacs='emacs25 -mm' #emacs maximised

#disable the shared history between terminals
unsetopt share_history

#symbolic links (go to the real path by default)
set -w

#stupid makerware
alias makerware="env LC_ALL=\"en_US.UTF-8\" makerware"

#VREP_STUFF
# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:"/home/steve/divers/VREP/V-REP_PRO_EDU_V3_1_3_rev2b_64_Linux"

source /opt/ros/kinetic/setup.zsh
source /home/steve/Project/DEV/catkin_ws/devel/setup.zsh
source /home/steve/Project/DEV/catkin_ws/devel_isolated/setup.zsh
source /home/steve/Project/DEV/catkin_ws/install_isolated/setup.zsh
# export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:/home/steve/Project/DEV/catkin_ws:/home/steve/Project/DEV/catkin_ws/src/hector_quadrotor #has been


export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/local/lib/pkgconfig

#export ROS_IP=`hostname -I`
# export ROS_MASTER_URI=http://rosban.local:11311/
#export ROS_MASTER_URI=http://steve-hp:11311/
export ROS_MASTER_URI=http://steve-hp.local:11311/
export ROS_HOSTNAME=steve-hp.local
# export GAZEBO_MASTER_URI=http://steve-hp.local:11345
# export GAZEBO_MASTER_URI=http://tower.local:11345


#BVS STUFFS
export BVSDIR=/home/steve/Project/DEV/BVS
#export BVS_LIBS=/home/steve/Project/DEV/BVS/lib


#Rhoban stuff
#source /home/steve/Project/Repo/deps/zshrc

#CCACHE
# export CCACHE_PREFIX=/usr/bin/distg++


#. /home/steve/torch/install/bin/torch-activate

# dbus worning with emacs?
export NO_AT_BRIDGE=1
export GAZEBO_MODEL_PATH=/home/steve/Project/Repo/ardupilot_gazebo


#Px4 stuffs
#export PATH=/opt/gcc-arm-none-eabi-4_9-2015q3/bin:$PATH
export PATH=/home/steve/Project/Repo/ardupilot/Tools/autotest:$PATH
export PATH=/home/steve/gcc-arm-none-eabi-7-2017-q4-major/bin:$PATH


# export PATH="$PATH:/home/steve/Project/Repo/SYCU/workspace/devel_release/lib/RhIOShell/"

# export SYCU="/home/steve/Project/Repo/SYCU/"
